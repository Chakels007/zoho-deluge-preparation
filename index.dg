
// Basic 

strVar="Your contact has been saved";

info strVar;


// List

strList = List:String({"hockey", "cricket", "football", "tennis"});

info strList;

input = {"Name":"Gowtham", "Country":"India"}

list1 = List.String({input.Name + ", " + input.Country});

info list1;

// Map - Key Value pair

map1 = map();
map1.put("David", "USA");
map1.put("Sam", "UK");
map1.put("Alex", "UAE");

if(map1.containKey("David"))
{
    alert ("David Lives in " + map1.get("David"));
}
else
{
    alert ("The Name does now contain");
}

// Clear the map

map1.clear();

info map1;

// Proof that the map size is reduced

map1 = map();
map1.put("David", "USA");
map1.put("Sam", "UK");
map1.put("Alex", "UAE");

info(map1.size()+ " size"); // 3 size
map1.clear();
info(map1.size()+ " size"); // 0 size

// conditional statement

time = "today";
strT = IF(time == "today", "My Birthday", "Not My Birthday");
info strT;

// send email 

sendmail
(
From : "test@zoho.com" 
To : "test@zoho.com" 
Subject : "Report for Product Status: " 
Message : "Product: "
)

info "Report has been sent.";

// Zoho Crm Create Records

newRecordInfo = Map();
newRecordInfo.put("Last_Name", "Sriram");
newRecordInfo.put("mobile_number", "9940176788");
newRecordInfo.put("country", "India");

response = zoho.crm.createRecord("Leads",newRecordInfo, {trigger:{"workflow"}});
info response;

{
  "Modified_Time": "2018-10-25T10:38:28+05:30",
  "Modified_By": {
    "name": "ZohoDemo",
    "id": "3388926000000166021"
  },
  "Created_Time": "2018-10-25T10:38:28+05:30",
  "id": "3388926000000313001",
  "Created_By": {
    "name": "ZohoTest",
    "id": "3388926000000166021"
  }
}


// Zoho crm upload records

uploadRecord = Map();
uploadRecord.put("Last_Name", "John");
response = zoho.crm.uploadRecord("Leads", 3865000457214, uploadRecord);
info response;

{
  "Modified_Time": "2018-10-25T10:50:15+05:30",
  "Modified_By": {
    "name": "ZohoDemo",
    "id": "3388926000000166021"
  },
  "Created_Time": "2018-10-25T10:38:28+05:30",
  "id": "3388926000000313001",
  "Created_By": {
    "name": "ZohoTest",
    "id": "3388926000000166021"
  }
}

// Zoho crm get records

<response> = zoho.crm.getRecords(<module>, page, perPage);

// get records and update

resp = zoho.crm.getRecords("Deals");
info resp;

for each ele in resp
{
  if(ele.get("Amount") >= 1000)
  {
    taskId = ele.get("Id");
    taskInfo = Map();
    taskInfo = {"Commission": 500};
    response = zoho.crm.update("Deals", taskId, taskInfo);
    info "response: "+ response;
  }
}

// response
{
  "Owner": {
    "name": "ZohoTest",
    "id": "3388926000000166021"
  },
  "Description": null,
  "$currency_symbol": "$",
  "Campaign_Source": null,
  "$followers": null,
  "Closing_Date": "2018-10-09",
  "Last_Activity_Time": "2018-10-25T11:56:25+05:30",
  "Modified_By": {
    "name": "ZohoDemo",
    "id": "3388926000000166021"
  },
  "Lead_Conversion_Time": null,
  "$process_flow": false,
  "Deal_Name": "Deal4",
  "Expected_Revenue": 240,
  "Overall_Sales_Duration": 0,
  "Stage": "Needs Analysis",
  "Account_Name": {
    "name": "Acme Inc",
    "id": "3388926000000297008"
  },
  "id": "3388926000000297088",
  "$approved": true,
  "$approval": {
    "delegate": false,
    "approve": false,
    "reject": false,
    "resubmit": false
  },
  "Modified_Time": "2018-10-25T11:56:25+05:30",
  "Created_Time": "2018-10-22T12:47:15+05:30",
  "Amount": 1200,
  "$followed": false,
  "Probability": 20,
  "Next_Step": "yes",
  "Commission": null,
  "$editable": true,
  "Prediction_Score": null,
  "Contact_Name": null,
  "Sales_Cycle_Duration": 0,
  "Type": null,
  "Lead_Source": null,
  "Created_By": {
    "name": "ZohoTest",
    "id": "3388926000000166021"
  },
  "Tag": []
}

// Get records by ID

leadId = lead.get("Leads.ID");
response = zoho.crm.getRecordById("Leads", leadId);
info response;

// Get related records

<response> = zoho.crm.getRelatedRecords("Notes", "Leads", 25487550021, 1 , 3);
info response;

// search records

searchResp = zoho.crm.searchRecords("Accounts", "((Account:equals:ABB)and(Industry:starts_with:Logistics))", 1, 10);
info seachResp;

// response 

{
  "Owner": {
    "name": "ZohoTest",
    "id": "3388926000000166021"
  },
  "Ownership": null,
  "Description": null,
  "$currency_symbol": "$",
  "Account_Type": null,
  "Rating": null,
  "SIC_Code": null,
  "Shipping_State": "Tamil Nadu",
  "Website": null,
  "Employees": null,
  "Last_Activity_Time": "2018-10-25T16:24:35+05:30",
  "Industry": "Storage Equipment",
  "Record_Image": null,
  "Modified_By": {
    "name": "Zoho Demo",
    "id": "3388926000000166021"
  },
  "Account_Site": null,
  "$process_flow": false,
  "Phone": null,
  "Billing_Country": "India",
  "Account_Name": "Acme",
  "id": "3388926000000297008",
  "Account_Number": "0",
  "$approved": true,
  "Ticker_Symbol": null,
  "$approval": {
    "delegate": false,
    "approve": false,
    "reject": false,
    "resubmit": false
  },
  "Modified_Time": "2018-10-25T16:24:35+05:30",
  "Billing_Street": "27/2727",
  "Created_Time": "2018-10-22T10:01:12+05:30",
  "$editable": true,
  "Billing_Code": "682020",
  "Parent_Account": null,
  "Shipping_City": "Chengalpattu",
  "Shipping_Country": "India",
  "Shipping_Code": "603202",
  "Billing_City": "Kochi",
  "Billing_State": "Kerala",
  "Tag": [],
  "Created_By": {
    "name": "ZohoTest",
    "id": "3388926000000166021"
  },
  "Fax": null,
  "Annual_Revenue": null,
  "Shipping_Street": "Estancia IT Park, Plot No. 140 & 151 GST Road"
}

// long logic

accountId = account.get("Accounts.ID");
relRecords = zoho.crm.getRelatedRecords("Contacts", 'Accounts', accountId);
recordResp = zoho.crm.getRecordById("Accounts", accountId);

contactAddress = Map();
contactAddress.put("Billing Country", recordResp.get('Billing_Country'));
contactAddress.put("Shipping Country", recordResp.get('Shipping-Country'));

for each ele in relRecords
{
  contactId = ele.get("id");
  response = zoho.crm.updateRecord("Contacts", contactId, contactAddress);
  info response;
}


// Delete record

deleteRecordMap = Map();
deleteRecordMap.put("module", "Leads");
deleteRecordMap.put("id", "3256000784");

delResp = zoho.crm.invokeConnector('crm.delete', deleteRecordMap);
info delResp;

// response 

{
  "status_code": 200,
  "response": "{\"data\":[{\"code\":\"SUCCESS\",\"details\":{\"id\":\"3388926000000286025\"},\"message\":\"record deleted\",\"status\":\"success\"}]}"
}


// Get users

response = zoho.crm.getRecords("users", 1, 100, {"type":"ActiveUsers"});
info response;

// Connectors - 3rd paty amd workflow

Fnam = input.contact.get("First_Name");
Lnam = input.contact.get("Last_Name");
mail = input.contact.get("Email");
Mob = input.contact.get("Mobile");
map = {"Fname" : Fnam, "Lname" : Lnam, "Email" : mail, "Mobile" : Mob};
response = zoho.crm.invokeConnector("googledrive.contacts",map);

// Set Organisation variable

varibleMap = Map();
variableMap.put("name","Gowtham");
variableMap.put("age","26");

response = zoho.crm.invokeConnector("crm.set", variableMap);
info response;

// response

{
  "status_code": "200",
  "response": "{\"Score\":\"50\",\"message\":\"New value updated successfully.\"}"
}


// get Org variable

apiName = zoho.crm.getOrgVariable("name");
info apiName;

// reponse = Gowtham

// Get module meta data

moduleMap = Map();
moduleMap.put("module", "Leads");

reponse = zoho.crm.invokeConnector("crm.modulemetadata", moduleMap);
info response;

// response 

{
  "status_code":200,
  "response":"{\"modules\":[\"global_search_supported\":true, \"deletable\":true,\"creatable\":true,\"filter_status\":true,
  \"modified_time\":\"2018-11-19T10:47:34+05:30\",\"plural_label\":\"Leads\",
  \"presence_sub_menu\":true,\"id\":\"2853142000000002175\",
  \"related_list_properties\":{\"sort_by\":null,\"fields\":[\"First_Name\",
  \"Last_Name\",\"Full_Name\",\"Company\",\"Email\",\"Lead_Source\",
  \"Lead_Status\",\"Phone\"],\"sort_order\":null},\"$properties\":[\"$converted\",
  \"$approved\",\"$converted_detail\",\"$currency_symbol\",\"$approval\",
  \"$process_flow\"],\"per_page\":10,\"visibility\":1,\"convertable\":true,
  \"editable\":true,\"profiles\":[{\"name\":\"Administrator\",
  \"id\":\"2853142000000026011\"},{\"name\":\"Standard\",
  \"id\":\"2853142000000026014\"}],\"filter_supported\":true,
  \"display_field\":\"Full_Name\",\"search_layout_fields\":[\"Company\",
  \"Owner\",\"Full_Name\",\"Email\",\"Phone\",\"Lead_Source\"],
  \"web_link\":null,\"sequence_number\":2,\"singular_label\":\"Lead\",
  \"viewable\":true,\"api_supported\":true,\"api_name\":\"Leads\",
  \"quick_create\":true,\"modified_by\":{\"name\":\"ZohoDemo\",
  \"id\":\"2853142000000131009\"},\"generated_type\":\"default\",
  \"feeds_required\":false,\"scoring_supported\":true,\"arguments\":[],
  \"module_name\":\"Leads\",\"business_card_field_limit\":5,
  \"custom_view\":{\"display_value\":\"All Leads\",\"shared_type\":null,
  \"criteria\":{\"comparator\":\"equal\",\"field\":\"$converted\",
  \"value\":false},\"system_name\":\"ALLVIEWS\",\"shared_details\":null,
  \"sort_by\":null,\"offline\":true,\"default\":true,\"system_defined\":true,
  \"name\":\"All Open Leads\",\"id\":\"2853142000000087501\",
  \"category\": \"shared_with_me\",\"fields\":[\"Full_Name\",\"Company\",
  \"Email\",\"Phone\",\"Lead_Source\",\"Owner\", \"Mobile\",
  \"Last_Activity_Time\",\"Prediction_Score\"],\"favorite\":null,
  \"sort_order\":null}, \"parent_module\":{}}]}"
}

// get all module metadata

map = map();
response = zoho.crm.invokeConnector("crm.getmodulemetadata", map);
info response;

// Get organisation info

m = map();
response = zoho.crm.invokeConnector("crm.getorg", m);
info response;